/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package gestao.de.stock.ui.paginas;

import gestao.de.stock.ui.pop_ups.Pop_Up_AnaliseAbate;
import gestao.de.stock.api.Conexao;
import gestao.de.stock.api.TableColourCellRenderer;
import gestao.de.stock.api.Util;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author PAT
 */
public final class Sig extends javax.swing.JInternalFrame {
//Inicializar os contrutores
    
    Conexao c;
    Util u;
    Statement stm ;
    TableColourCellRenderer renderer;
        
    
    public Sig(Conexao c,Util u) throws Exception {
        //variaveis de conexao e utlidades
        this.c = c;
        this.u = u;
        stm = c.fazerConexao().createStatement();
        renderer = new TableColourCellRenderer("Sig",u);
        
        //painel fixo
        initComponents();
        setPainelFixo();
        
        //definir as comboboxes
        tabelaTodos();
        tabelaPorAbater();
        
    }
    //tornal painel fixo
    private void setPainelFixo(){
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi =(BasicInternalFrameUI)this.getUI();  
        bi.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        porAbater = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaSig = new javax.swing.JTable();
        progresso = new javax.swing.JSpinner();
        btnAdicionar = new javax.swing.JButton();
        todos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaTodos = new javax.swing.JTable();
        analise = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(232, 236, 244));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1070, 610));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(281, 619, -1, -1));

        tabelaSig.setBackground(getBackground());
        tabelaSig.setForeground(new java.awt.Color(0, 0, 0));
        tabelaSig.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NNA", "IC", "DATA", "CONSUMIVEL", "CENTRO_CUSTO", "QUANTIDADE", "PROGRESSO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaSig.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabelaSig.setRowHeight(25);
        tabelaSig.setRowMargin(5);
        tabelaSig.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaSig.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaSig.setShowGrid(true);
        jScrollPane1.setViewportView(tabelaSig);
        if (tabelaSig.getColumnModel().getColumnCount() > 0) {
            tabelaSig.getColumnModel().getColumn(0).setMinWidth(0);
            tabelaSig.getColumnModel().getColumn(0).setPreferredWidth(0);
            tabelaSig.getColumnModel().getColumn(0).setMaxWidth(0);
            tabelaSig.getColumnModel().getColumn(6).setPreferredWidth(10);
            tabelaSig.getColumnModel().getColumn(7).setResizable(false);
        }

        btnAdicionar.setText("ADICIONAR");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout porAbaterLayout = new javax.swing.GroupLayout(porAbater);
        porAbater.setLayout(porAbaterLayout);
        porAbaterLayout.setHorizontalGroup(
            porAbaterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(porAbaterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 918, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(porAbaterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progresso)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                .addContainerGap())
        );
        porAbaterLayout.setVerticalGroup(
            porAbaterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(porAbaterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(porAbaterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(porAbaterLayout.createSequentialGroup()
                        .addComponent(progresso, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabbedPane.addTab("POR ABATER", porAbater);

        tabelaTodos.setBackground(getBackground());
        tabelaTodos.setForeground(new java.awt.Color(0, 0, 0));
        tabelaTodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NNA", "IC", "DATA", "QUANTIDADE", "CONSUMIVEL", "CENTRO_CUSTO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaTodos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabelaTodos.setRowHeight(25);
        tabelaTodos.setRowMargin(5);
        tabelaTodos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaTodos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaTodos.setShowGrid(true);
        jScrollPane2.setViewportView(tabelaTodos);
        if (tabelaTodos.getColumnModel().getColumnCount() > 0) {
            tabelaTodos.getColumnModel().getColumn(0).setMinWidth(0);
            tabelaTodos.getColumnModel().getColumn(0).setPreferredWidth(0);
            tabelaTodos.getColumnModel().getColumn(0).setMaxWidth(0);
            tabelaTodos.getColumnModel().getColumn(4).setPreferredWidth(10);
        }

        analise.setText("An√°lise");
        analise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analiseActionPerformed(evt);
            }
        });

        jButton1.setText("Exportar ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout todosLayout = new javax.swing.GroupLayout(todos);
        todos.setLayout(todosLayout);
        todosLayout.setHorizontalGroup(
            todosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(todosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(todosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1041, Short.MAX_VALUE)
                    .addGroup(todosLayout.createSequentialGroup()
                        .addComponent(analise, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        todosLayout.setVerticalGroup(
            todosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(todosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(todosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(analise, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabbedPane.addTab("TODOS", todos);

        getContentPane().add(tabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 590));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void tabelaTodos() throws Exception{
        
         try{
             //definir a tabela
             DefaultTableModel table = (DefaultTableModel) tabelaTodos.getModel();
             table.setRowCount(0);
             
         
             //criar uma query e executar
         ResultSet rs = stm.executeQuery("SELECT ID_SIG, NNA , IC, to_char(DATA,'DD/MM/YYYY') DATA, "
                 + "QUANTIDADE, (MARCA || '_' || MODELO || '_'|| NOME) AS CONSUMIVEL, LOCALIZACAO "
                 + "FROM Sig a, Consumivel b, centro_custo c, IC d, Impressora e "
                 + "WHERE a.ID_CONSUMIVEL = b.ID_CONSUMIVEL AND a.ID_CENTRO_CUSTO = c.ID_CENTRO_CUSTO AND b.ID_IMPRESSORA = e.ID_IMPRESSORA AND a.ID_IC = d.ID_IC");
             
           while(rs.next())
           {
               //passar os dados da BD para um object
               Object o[] = {rs.getInt("ID_SIG"),rs.getString("NNA"), rs.getString("IC"),
               rs.getString("DATA"),rs.getInt("QUANTIDADE"), rs.getString("CONSUMIVEL"),rs.getString("LOCALIZACAO")};
               
               //Adicionar os dados √† tabela
               table.addRow(o);
               
       }
         }
       catch(SQLException exp)
       {
           throw new Exception (exp.getMessage());
       }

     }
    public void tabelaPorAbater() throws Exception{
        
         try{
             //definir a tabela
             DefaultTableModel table = (DefaultTableModel) tabelaSig.getModel();
             table.setRowCount(0);
             
         
             //criar uma query e executar
         ResultSet rs = stm.executeQuery("SELECT ID_SIG_TEMP, NNA , IC, to_char(DATA,'DD/MM/YYYY') DATA, "
                 + "f.QUANTIDADE, (MARCA || '_' || MODELO || '_'|| NOME) AS CONSUMIVEL, CUSTO, PROGRESSO "
                 + "FROM Sig a, Consumivel b, centro_custo c, IC d, Impressora e, SIG_TEMP f "
                 + "WHERE a.ID_CONSUMIVEL = b.ID_CONSUMIVEL AND a.ID_CENTRO_CUSTO = c.ID_CENTRO_CUSTO AND b.ID_IMPRESSORA = e.ID_IMPRESSORA AND a.ID_IC = d.ID_IC "
                 + "AND a.ID_SIG = f.ID_SIG");
             
           while(rs.next())
           {
               //passar os dados da BD para um object
               Object o[] = {rs.getInt("ID_SIG_TEMP"),rs.getString("NNA"), rs.getString("IC"),
               rs.getString("DATA"), rs.getString("CONSUMIVEL"),rs.getString("CUSTO"),rs.getInt("QUANTIDADE"),rs.getInt("PROGRESSO")};
               
               //Adicionar os dados √† tabela
               table.addRow(o);
               
       }
           tabelaSig.setDefaultRenderer(Object.class, renderer);
           
         }
       catch(SQLException exp)
       {
           throw new Exception (exp.getMessage());
       }
         
         if(tabelaSig.getRowCount() == 0)
         {
             progresso.setEnabled(false);
             btnAdicionar.setEnabled(false);
         }else{
             progresso.setEnabled(true);
             btnAdicionar.setEnabled(true);
         }

     }
    
     public int buscarDados(String x) throws SQLException
    {
        //buscar dados j√° existentes e inserir-los nas respetivas vaariaveis
        ResultSet rs = stm.executeQuery("SELECT "+x+" FROM SIG_TEMP WHERE ID_SIG_TEMP = "+getId()+"");
            
        int valor = 0;
            while(rs.next())
            {
                valor = rs.getInt(x);
            }
            
            return valor;
    }  
     
    public int getId(){
        //buscar o ID de modo a fazer query na bd
        if(tabelaSig.getSelectedRow()!= -1)
         {
            int row = tabelaSig.getSelectedRow();
               int value = Integer.parseInt(tabelaSig.getModel().getValueAt(row, 0).toString());
        return value;
         }
        return 0;
}
    public int getIdConsumivel() throws SQLException{
        //buscar o ID de modo a fazer query na bd
        if(tabelaSig.getSelectedRow()!= -1)
         {
            int row = tabelaSig.getSelectedRow();
               String value = tabelaSig.getModel().getValueAt(row, 4).toString();
               int cons = u.getIdConsumivel(value);
             
             return cons;
         }
        return 0;
}
    
    private void analiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analiseActionPerformed
        try {
            // TODO add your handling code here:
            
            Pop_Up_AnaliseAbate hm = new Pop_Up_AnaliseAbate(c,u);
            //Adicionar a nova p√°gina
            hm.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(Sig.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_analiseActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        u.exportarExcel(tabelaSig);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
        if(tabelaSig.getSelectedRow()!= -1)
        {
        try {
            int stock= buscarDados("QUANTIDADE");
            int valorExistente = Integer.parseInt(progresso.getValue().toString());
            
            int valor = buscarDados("PROGRESSO") + valorExistente;
            
            
            System.err.println(stock +" / "+ valor);
            
            if(valor == stock)
            {
                u.apagar("SIG_TEMP", getId());
                u.abaterSig(valor, getIdConsumivel());
                
                JOptionPane.showMessageDialog(rootPane, "Quantidade abatida!", "Aviso", 1);
                progresso.setValue(0);
            }else if(valor>stock){
                JOptionPane.showMessageDialog(rootPane, "Valor utrapassado!", "Aviso", 0);
                
            }else if(valor<stock){
                stm.executeUpdate("UPDATE SIG_TEMP SET PROGRESSO = "+valor+" WHERE ID_SIG_TEMP = "+getId()+"");
                progresso.setValue(0);
            }
            
            tabelaPorAbater();
        } catch (SQLException ex) {
            Logger.getLogger(Sig.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Sig.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Selecione um dado da tabela!", "Aviso", 2);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analise;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel porAbater;
    private javax.swing.JSpinner progresso;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable tabelaSig;
    private javax.swing.JTable tabelaTodos;
    private javax.swing.JPanel todos;
    // End of variables declaration//GEN-END:variables
}
