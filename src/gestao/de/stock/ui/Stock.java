/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package gestao.de.stock.ui;

import gestao.de.stock.api.Conexao;
import gestao.de.stock.api.TableColourCellRenderer;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author PAT
 */
public final class Stock extends javax.swing.JInternalFrame {

    //Inicializar os contrutores
    Conexao c ;
    Statement stm;
    int stockAtivo;
    int sigAtivo;
    
    
    public Stock(Conexao c) throws Exception {
        this.c = c;
        stm = this.c.fazerConexao().createStatement();
        
        initComponents();
        setPainelFixo();
        tabelaArmazem();
    }
    
    private void setPainelFixo(){
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi =(BasicInternalFrameUI)this.getUI();  
        bi.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        ABATER = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        stock = new javax.swing.JSpinner();
        btnAdicionar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        abaterStock = new javax.swing.JSpinner();
        btnAbaterStock = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        sig = new javax.swing.JSpinner();
        btnAbaterSig = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        igualar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        filtro = new javax.swing.JTextField();
        btnFiltrar = new javax.swing.JButton();
        btnRepor = new javax.swing.JButton();

        setBackground(new java.awt.Color(232, 236, 244));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1070, 610));

        tabela.setBackground(getBackground());
        tabela.setForeground(new java.awt.Color(0, 0, 0));
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NOME", "STOCK", "SIG"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabela.setRowHeight(25);
        tabela.setRowMargin(5);
        tabela.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabela.setShowGrid(true);
        tabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabela);
        if (tabela.getColumnModel().getColumnCount() > 0) {
            tabela.getColumnModel().getColumn(0).setPreferredWidth(10);
            tabela.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ADICIONAR STOCK");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnAdicionar.setText("ADICIONAR");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stock)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        ABATER.addTab("ADD", jPanel1);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ABATER STOCK");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnAbaterStock.setText("ABATER");
        btnAbaterStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbaterStockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAbaterStock, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(abaterStock)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(abaterStock, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAbaterStock, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        ABATER.addTab("ABATER STOCK", jPanel2);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SIG");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnAbaterSig.setText("ABATER");
        btnAbaterSig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbaterSigActionPerformed(evt);
            }
        });

        igualar.setText("IGUALAR AO STOCK");
        igualar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igualarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(igualar, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                    .addComponent(btnAbaterSig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sig)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sig, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAbaterSig, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(igualar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        ABATER.addTab("ABATER SIG", jPanel3);

        jLabel4.setText("NOME:");

        btnFiltrar.setText("FILTRAR");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        btnRepor.setText("REPOR");
        btnRepor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFiltrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filtro))
                    .addComponent(btnRepor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(filtro, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFiltrar)
                .addGap(18, 18, 18)
                .addComponent(btnRepor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ABATER)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(ABATER, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void tabelaArmazem() throws Exception{
        
         try{
             //definir a tabela
             DefaultTableModel table = (DefaultTableModel) tabela.getModel();
            
             table.setRowCount(0);
             
             
             
         
             //criar uma query e executar
         ResultSet rs = stm.executeQuery("SELECT ID_ARMAZEM, STOCK, NOME, SIG FROM ARMAZEM");
             
           while(rs.next())
           {
               //passar os dados da BD para um object
               Object o[] = {rs.getInt("ID_ARMAZEM"), rs.getString("NOME"), rs.getInt("STOCK"),
               rs.getInt("SIG")};
               //Adicionar os dados à tabela a partir do object
                table.addRow(o);
           }
           //criar objeto da class TableColourCellRenderer a fim de alterar a cor do campo sig //VER CLASSE TableColourCellRenderer
            TableColourCellRenderer renderer = new TableColourCellRenderer();
             tabela.setDefaultRenderer(Object.class, renderer);
           
         }
       catch(Exception exp)
       {
           throw new Exception (exp.getMessage());
       }

    }
    
    
    public void limparCampos(){
        
        stock.setValue(0);
        sig.setValue(0);
        abaterStock.setValue(0);
    }
    
    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
         try {
             //buscar dados 
            buscarDados();
            
            
            if(getId() != 0)
            {
                //buscasr e calcular o valor da soma do stock e sig existentes com os introduzidos
                int somaStock = stockAtivo+Integer.parseInt(stock.getValue().toString());
            int somaSig = sigAtivo+Integer.parseInt(stock.getValue().toString());
                
            //query para adicionar
                String q = "UPDATE ARMAZEM SET STOCK = "+somaStock+", SIG = "+somaSig+" "+
                    "WHERE ID_ARMAZEM = "+getId()+"";
             
             stm.executeUpdate(q);
             
             JOptionPane.showMessageDialog(rootPane, "Stock adicionado!");
    
                    limparCampos();
                    tabelaArmazem();
                    tabela.clearSelection();
            }else{
                JOptionPane.showMessageDialog(rootPane, "Selecione dado da tabela!");
            }
            
        } catch (SQLException | ClassNotFoundException ex) {
            
            JOptionPane.showMessageDialog(rootPane, "ERRO!\n"+ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "ERRO!");
        }
        
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnAbaterSigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbaterSigActionPerformed
        // TODO add your handling code here:
        
        try {
                  buscarDados();
                  
                  if(getId() != 0)
                  {
                       int subSig = sigAtivo - Integer.parseInt(sig.getValue().toString());
                 
                     stm.executeUpdate("UPDATE ARMAZEM SET SIG = "+subSig+" "+
                                      "WHERE ID_ARMAZEM = "+getId());
                     
                     JOptionPane.showMessageDialog(rootPane, "Consumiveis abatidos!");
                     
                     tabelaArmazem();
                     tabela.clearSelection();
                     limparCampos();
                  }else{
                       JOptionPane.showMessageDialog(rootPane, "Selecione dado da tabela!");
                  }
             } catch (SQLException | ClassNotFoundException ex) {
                 JOptionPane.showMessageDialog(rootPane, "ERRO!\n"+ex);
             } catch (Exception ex) {
                Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_btnAbaterSigActionPerformed

    private void btnAbaterStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbaterStockActionPerformed
        // TODO add your handling code here:
        
        try {
                  buscarDados();
                  
                  if(getId() != 0)
                  {
                      //query para abater stock
                      int subStock = stockAtivo - Integer.parseInt(abaterStock.getValue().toString());
                 
                     stm.executeUpdate("UPDATE ARMAZEM SET STOCK = "+subStock+" "+
                                      "WHERE ID_ARMAZEM = "+getId());
                    
                     JOptionPane.showMessageDialog(rootPane, "Stock abatido!");
                     
                     tabelaArmazem();
                     tabela.clearSelection();
                     limparCampos();
                  }else{
                      JOptionPane.showMessageDialog(rootPane, "Selecione dado da tabela!");
                  }
             } catch (SQLException | ClassNotFoundException ex) {
                 JOptionPane.showMessageDialog(rootPane, "ERRO!\n"+ex);
             } catch (Exception ex) {
                Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnAbaterStockActionPerformed

    private void igualarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_igualarActionPerformed
        // TODO add your handling code here:
         try {
                  buscarDados();
                 
                  if(getId() != 0)
                  {
                      stm.executeUpdate("UPDATE ARMAZEM SET SIG = "+stockAtivo+" "+
                                      "WHERE ID_ARMAZEM = "+getId());
                    
                     JOptionPane.showMessageDialog(rootPane, "SIG igualado!");
                     
                     tabelaArmazem();
                     tabela.clearSelection();
                     limparCampos();
                  }
                 
             } catch (SQLException | ClassNotFoundException ex) {
                 JOptionPane.showMessageDialog(rootPane, "ERRO!\n"+ex);
             } catch (Exception ex) {
                Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_igualarActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        try {
            //definir a tabela
            DefaultTableModel table = (DefaultTableModel) tabela.getModel();
            
            table.setRowCount(0);
            
            
            //criar uma query e executar
            ResultSet rs = stm.executeQuery("SELECT ID_ARMAZEM, STOCK, NOME, SIG FROM ARMAZEM WHERE NOME LIKE '%"+filtro.getText().toUpperCase()+"%'");
            
            while(rs.next())
            {
                //passar os dados da BD para um object
                Object o[] = {rs.getInt("ID_ARMAZEM"), rs.getString("NOME"), rs.getInt("STOCK"),
                    rs.getInt("SIG")};
                //Adicionar os dados à tabela
                table.addRow(o);
            }
            TableColourCellRenderer renderer = new TableColourCellRenderer();
            tabela.setDefaultRenderer(Object.class, renderer);
        } catch (SQLException ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }
           
         
        
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void btnReporActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporActionPerformed
        try {
            // TODO add your handling code here:
            tabelaArmazem();
            filtro.setText("");
        } catch (Exception ex) {
            Logger.getLogger(Stock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReporActionPerformed

    public int getId(){
        //buscar o ID de modo a fazer query na bd
        if(tabela.getSelectedRow()!= -1)
         {
            int row = tabela.getSelectedRow();
               int value = Integer.parseInt(tabela.getModel().getValueAt(row, 0).toString());
        return value;
         }else
    return 0;
}
    
    public void buscarDados() throws SQLException
    {
        //buscar dados já existentes e inserir-los nas respetivas vaariaveis
        ResultSet rs = stm.executeQuery("SELECT STOCK, SIG FROM ARMAZEM WHERE ID_ARMAZEM = "+getId()+"");
            
            while(rs.next())
            {
                stockAtivo = rs.getInt("STOCK");
                sigAtivo = rs.getInt("SIG");
            }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane ABATER;
    private javax.swing.JSpinner abaterStock;
    private javax.swing.JButton btnAbaterSig;
    private javax.swing.JButton btnAbaterStock;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnRepor;
    private javax.swing.JTextField filtro;
    private javax.swing.JButton igualar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner sig;
    private javax.swing.JSpinner stock;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
