/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package gestão.de.stock.pkgfinal;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author PAT
 */
public final class Utilizacao extends javax.swing.JInternalFrame {
//Inicializar os contrutores
    
    Conexao c = new Conexao();
        Statement stm = c.fazerConexao().createStatement();
        
    
    
    public Utilizacao() throws Exception {
        initComponents();
        setPainelFixo();
        tabelaUtilizacao();
        
        comboOracle(lista("consumivel"),comboConsumivel);
        comboOracle(lista("localizacao"),comboLocalizacao);
        comboOracle(lista("impressora"),comboIc);
        
    }
    
    private void setPainelFixo(){
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi =(BasicInternalFrameUI)this.getUI();  
        bi.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        dados = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        PRETO = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        comboConsumivel = new javax.swing.JComboBox<>();
        data = new com.toedter.calendar.JDateChooser();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        comboLocalizacao = new javax.swing.JComboBox<>();
        quantidade = new javax.swing.JSpinner();
        comboIc = new javax.swing.JComboBox<>();
        preto = new javax.swing.JSpinner();
        cor = new javax.swing.JSpinner();
        butoes = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        analise = new javax.swing.JButton();

        setBackground(new java.awt.Color(232, 236, 244));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1070, 610));

        tabela.setBackground(getBackground());
        tabela.setForeground(new java.awt.Color(0, 0, 0));
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "IC", "QUANTIDADE", "DATA", "PRETO", "COR", "CONSUMIVEL", "LOCALIZACAO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabela.setRowHeight(25);
        tabela.setRowMargin(5);
        tabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabela.setShowGrid(true);
        tabela.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tabelaFocusLost(evt);
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);
        if (tabela.getColumnModel().getColumnCount() > 0) {
            tabela.getColumnModel().getColumn(0).setResizable(false);
            tabela.getColumnModel().getColumn(0).setPreferredWidth(10);
            tabela.getColumnModel().getColumn(1).setResizable(false);
            tabela.getColumnModel().getColumn(2).setResizable(false);
            tabela.getColumnModel().getColumn(2).setPreferredWidth(10);
            tabela.getColumnModel().getColumn(3).setResizable(false);
            tabela.getColumnModel().getColumn(4).setResizable(false);
            tabela.getColumnModel().getColumn(4).setPreferredWidth(10);
            tabela.getColumnModel().getColumn(5).setResizable(false);
            tabela.getColumnModel().getColumn(5).setPreferredWidth(10);
            tabela.getColumnModel().getColumn(6).setResizable(false);
            tabela.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel1.setLabelFor(comboIc);
        jLabel1.setText("IC");

        jLabel2.setText("QUANTIDADE");

        jLabel3.setText("DATA");

        PRETO.setText("PRETO");

        jLabel5.setText("COR");

        jLabel6.setText("CONSUMIVEL");

        comboConsumivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboConsumivel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboConsumivelItemStateChanged(evt);
            }
        });

        data.setMinimumSize(new java.awt.Dimension(5, 19));
        data.setOpaque(false);
        data.setPreferredSize(new java.awt.Dimension(5, 19));

        jLabel7.setText("LOCALIZAÇÃO");

        comboLocalizacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        quantidade.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        comboIc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboIc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboIcItemStateChanged(evt);
            }
        });

        preto.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        cor.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout dadosLayout = new javax.swing.GroupLayout(dados);
        dados.setLayout(dadosLayout);
        dadosLayout.setHorizontalGroup(
            dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addComponent(PRETO, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(preto, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cor, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboConsumivel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboLocalizacao, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboIc, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        dadosLayout.setVerticalGroup(
            dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dadosLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboIc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2))
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PRETO)
                    .addComponent(preto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel6))
                    .addComponent(comboConsumivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel7))
                    .addComponent(comboLocalizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarMouseClicked(evt);
            }
        });

        btnApagar.setText("Apagar");
        btnApagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnApagarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout butoesLayout = new javax.swing.GroupLayout(butoes);
        butoes.setLayout(butoesLayout);
        butoesLayout.setHorizontalGroup(
            butoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnApagar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(butoesLayout.createSequentialGroup()
                .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
        );
        butoesLayout.setVerticalGroup(
            butoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(butoesLayout.createSequentialGroup()
                .addGroup(butoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnApagar, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
        );

        jPanel1.setLayout(new java.awt.BorderLayout());

        analise.setText("Análise");
        analise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analiseActionPerformed(evt);
            }
        });
        jPanel1.add(analise, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(dados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(butoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void tabelaUtilizacao() throws Exception{
        
         try{
             //definir a tabela
             DefaultTableModel table = (DefaultTableModel) tabela.getModel();
             table.setRowCount(0);
             
         
             //criar uma query e executar
         ResultSet rs = stm.executeQuery("SELECT DISTINCT ID_UTILIZACAO, IC , QUANTIDADE, to_char(DATA_Util,'DD/MM/YYYY') DATA_Util, PRETO, COR, (MARCA || '_' || MODELO || '_'|| NOME) AS CONSUMIVEL, LOCALIZACAO  FROM Utilizacao a, Consumivel b, centro_custo c, IC d, Impressora e WHERE a.ID_CONSUMIVEL = b.ID_CONSUMIVEL AND a.ID_CENTRO_CUSTO = c.ID_CENTRO_CUSTO AND b.ID_IMPRESSORA = e.ID_IMPRESSORA AND a.ID_IC = d.ID_IC");
             
           while(rs.next())
           {
               //passar os dados da BD para um object
               Object o[] = {rs.getInt("ID_UTILIZACAO"),rs.getString("IC"), rs.getInt("QUANTIDADE"),
               rs.getString("DATA_Util"), rs.getInt("PRETO"), rs.getString("COR"), rs.getString("CONSUMIVEL"), rs.getString("LOCALIZACAO")};
               //Adicionar os dados à tabela
               table.addRow(o);
               
       }
         }
       catch(Exception exp)
       {
           throw new Exception (exp.getMessage());
       }

     }
    
    
    public void limparCampos(){
        
        comboConsumivel.setSelectedIndex(0);
        comboIc.setSelectedIndex(0);
        
        comboLocalizacao.setSelectedIndex(0);
        quantidade.setValue(0);
        data.setDate(null);
        
        preto.setValue(0);
        cor.setValue(0);
    }
    
    void buscarDados() throws ParseException, SQLException{
        
        if(tabela.getSelectedRow() == -1)
         {
           JOptionPane.showMessageDialog(rootPane, "Selecione um dado para editar!");
         }else{
            int row = tabela.getSelectedRow();
            
            comboIc.setSelectedItem(tabela.getModel().getValueAt(row, 1).toString());
                quantidade.setValue(Integer.parseInt(tabela.getModel().getValueAt(row, 2).toString()));
            
            ///////////////////////Data/////////////////////////////////////////
            
            String databela = tabela.getModel().getValueAt(row, 3).toString();
                java.util.Date date2 = new SimpleDateFormat("dd/MM/yy").parse(databela);
                    data.setDate(date2);
           /////////////////////////////////////////////////////////////////////
           
            preto.setValue(Integer.parseInt(tabela.getModel().getValueAt(row, 4).toString()));
                cor.setValue(Integer.parseInt(tabela.getModel().getValueAt(row, 5).toString()));
            ///////////////////////////COMBOS///////////////////////////////////
            
                comboConsumivel.setSelectedItem(tabela.getValueAt(row, 6).toString());
                System.out.println(tabela.getValueAt(row, 1).toString());
                comboLocalizacao.setSelectedItem(tabela.getValueAt(row, 7).toString());
            
        }
    }

    
    private void btnEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseClicked
        // TODO add your handling code here:
        
        
        if(quantidade.getValue().equals(0) || data.getDate() == null || preto.getValue().equals(0) || cor.getValue().equals(0))
        {
            JOptionPane.showMessageDialog(rootPane, "Todos os dados têm que ser preenchidos!");
        }else{
            //Verificar se todos têm o mesmo tamanho.
            if(data.getDate().toString().isEmpty()){
             JOptionPane.showMessageDialog(rootPane, "Há dados que não têm o tamanho suficiente");
            }
            else{
        
        int row = tabela.getSelectedRow();
               String value = tabela.getModel().getValueAt(row, 0).toString();
               
        try{
             stm = c.fazerConexao().createStatement();
             
             stm.executeUpdate("UPDATE Utilizacao SET QUANTIDADE = "+quantidade.getValue()+" , DATA_UTIL = TO_DATE('"+DateFormat.getDateInstance().format(data.getDate())+"', 'DD/MM/YYYY') , PRETO = "+preto.getValue()+" , COR = "+cor.getValue()+" , ID_CONSUMIVEL ="+comboSplit("consumivel")+", ID_CENTRO_CUSTO = "+comboSplit("centro_custo")+", ID_IC = "+comboSplit("impressora")+" WHERE ID_UTILIZACAO = "+Integer.parseInt(value)+"");
             
             JOptionPane.showMessageDialog(rootPane, "Dado editado com sucesso!");
                
             tabela.clearSelection();
                limparCampos();
                    tabelaUtilizacao();
                    
        } catch (ClassNotFoundException| SQLException ex) {
            
            JOptionPane.showMessageDialog(rootPane, "ERRO!\n"+ex);
            
        } catch (Exception ex) {
            Logger.getLogger(Utilizacao.class.getName()).log(Level.SEVERE, null, ex);
        } 
            }
        }
        
    }//GEN-LAST:event_btnEditarMouseClicked

    private void btnApagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnApagarMouseClicked
        // TODO add your handling code here:
        
        //verificar se o user selecionou algum dado
        if(tabela.getSelectedRow() == -1)
         {
           //   JOptionPane.showMessageDialog(rootPane, "Selecione um dado para apagar!");
         }else{
            //buscar o valor do ID no dado selecionado 
            
            int row = tabela.getSelectedRow();
               String value = tabela.getModel().getValueAt(row, 0).toString();
                
             
             try {
                 stm = c.fazerConexao().createStatement();
                int op = JOptionPane.showConfirmDialog(rootPane, "Tem a certeza?");
                 if(op == 0)
                 {
                     ResultSet rs = stm.executeQuery("DELETE FROM Utilizacao WHERE ID_UTILIZACAO = "+Integer.parseInt(value));
                     JOptionPane.showMessageDialog(rootPane, "Dado apagado com sucesso!");
                        tabelaUtilizacao();
                            tabela.clearSelection();
                                limparCampos();
                 }
                 
             } catch (SQLException | ClassNotFoundException ex) {
                 JOptionPane.showMessageDialog(rootPane, "ERRO!");
             } catch (Exception ex) {
                Logger.getLogger(Utilizacao.class.getName()).log(Level.SEVERE, null, ex);
            }
             
         }

    }//GEN-LAST:event_btnApagarMouseClicked

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        try {
            // TODO add your handling code here:
            buscarDados();
        } catch (ParseException | SQLException ex) {
            Logger.getLogger(Utilizacao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelaMouseClicked
  
    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
        
        //Verificar se os campos estão vazios.
        if( quantidade.getValue().equals(0) || data.getDate() == null || preto.getValue().equals(0) || cor.getValue().equals(0))
        {
            JOptionPane.showMessageDialog(rootPane, "Todos os dados têm que ser preenchidos!");
        }else{
            //Verificar se todos têm o mesmo tamanho.
            if(data.getDate().toString().isEmpty()){
             JOptionPane.showMessageDialog(rootPane, "A data tem que ser preenchida!");
            }
            else{
            
        
        try {
             
             stm.executeUpdate("INSERT INTO UTILIZACAO(QUANTIDADE,DATA_UTIL,PRETO,COR,ID_CONSUMIVEL,ID_CENTRO_CUSTO, ID_IC) VALUES("+quantidade.getValue()+" , TO_DATE('"+DateFormat.getDateInstance().format(data.getDate())+"', 'DD/MM/YYYY') , "+preto.getValue()+" , "+cor.getValue()+" , "+comboSplit("consumivel")+" , "+comboSplit("centro_custo")+", "+comboSplit("impressora")+")");
             
             
             
             JOptionPane.showMessageDialog(rootPane, "Dado inserido com sucesso!");
    
                    limparCampos();
                    tabelaUtilizacao();
             
        } catch (SQLException | ClassNotFoundException ex) {
            
            JOptionPane.showMessageDialog(rootPane, "ERRO!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "ERRO!");
        }
        }
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void tabelaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaFocusLost
        // TODO add your handling code here:
        //tabela.getSelectionModel().clearSelection();
        btnAdicionar.setEnabled(true);
    }//GEN-LAST:event_tabelaFocusLost

    private void comboIcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboIcItemStateChanged
        /*
        try {
            
            if(en)
            {
                
            }else{
                comboOracle(lista("consumivelDif"), comboConsumivel);
            }
        } catch (Exception ex) {
            Logger.getLogger(Utilizacao.class.getName()).log(Level.SEVERE, null, ex);
        }
*/
    }//GEN-LAST:event_comboIcItemStateChanged

    private void comboConsumivelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboConsumivelItemStateChanged
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_comboConsumivelItemStateChanged

    private void analiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analiseActionPerformed
        try {
            // TODO add your handling code here:
            
            Pop_Up_Analise hm = new Pop_Up_Analise();
            //Adicionar a nova página
            hm.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(Utilizacao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_analiseActionPerformed

    public ArrayList lista(String x) throws Exception{
        ArrayList list = new ArrayList<>();
        ResultSet rs;
        
        
        switch(x)
        {
            case "consumivel" -> {
                
               rs = stm.executeQuery("SELECT (MARCA || '_' || MODELO || '_'|| NOME) AS NOME FROM CONSUMIVEL a, IMPRESSORA b WHERE a.ID_IMPRESSORA = b.ID_IMPRESSORA");

            while(rs.next())
            {
                list.add(rs.getString("NOME"));
            }
            }
            
            case "localizacao" -> {
               
                rs = stm.executeQuery("SELECT LOCALIZACAO FROM CENTRO_CUSTO");

                while(rs.next())
                {
                    list.add(rs.getString("LOCALIZACAO"));
                }
            }
            case "impressora" -> {
                
                rs = stm.executeQuery("SELECT IC FROM IC");

                while(rs.next())
                {
                    list.add(rs.getString("IC"));
                }
            }
            default -> {
                System.out.println("Erro Lista");
            }
        }     
        return list;
    }
    
    private void comboOracle(ArrayList x, JComboBox c) throws SQLException, ClassNotFoundException, Exception{
        
        c.removeAllItems();
        Iterable<String> lista = x;
        
        c.addItem("----");
        for(String s : lista)
        {
            c.addItem(s);
        }
    }
     
    private int comboSplit(String x){
        
        String[] result =comboConsumivel.getSelectedItem().toString().split("_");
            String marca = result[0];
            String modelo = result[1];
            String cons = result[2];
        
        try{
            ResultSet rs;
            int id = 0;
            
            switch(x)
            {
                case "consumivel" -> {
                    rs = stm.executeQuery("SELECT ID_CONSUMIVEL FROM CONSUMIVEL a, IMPRESSORA b WHERE NOME = '"+cons+"' AND MARCA = '"+marca+"' AND MODELO = '"+modelo+"'");
                    while(rs.next())
                    {
                        id = rs.getInt(1);
                    }
                    
                }
                case "centro_custo" -> {
                    rs = stm.executeQuery("SELECT ID_CENTRO_CUSTO FROM CENTRO_CUSTO WHERE LOCALIZACAO = '"+comboLocalizacao.getSelectedItem()+"'");
                    while(rs.next())
                    {
                        id = rs.getInt(1);
                    }  
                    
                }
                case "impressora" -> {
                    rs = stm.executeQuery("SELECT ID_IC FROM IC WHERE IC = '"+comboIc.getSelectedItem()+"'");
                    while(rs.next())
                    {
                       id = rs.getInt(1);
                    }
             
                }
               
                default -> {
                    System.out.println("DUMB");
                    return -1;
                }
            }
             
             return id;
             
        }catch(SQLException exp){
            return 0;
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PRETO;
    private javax.swing.JButton analise;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JPanel butoes;
    private javax.swing.JComboBox<String> comboConsumivel;
    private javax.swing.JComboBox<String> comboIc;
    private javax.swing.JComboBox<String> comboLocalizacao;
    private javax.swing.JSpinner cor;
    private javax.swing.JPanel dados;
    private com.toedter.calendar.JDateChooser data;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSpinner preto;
    private javax.swing.JSpinner quantidade;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
